// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProyectoDesarrollo.Persistence.DataBase;

namespace ProyectoDesarrollo.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    partial class DataBaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MarcaProveedor", b =>
                {
                    b.Property<string>("MarcasName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProovedoresID")
                        .HasColumnType("int");

                    b.HasKey("MarcasName", "ProovedoresID");

                    b.HasIndex("ProovedoresID");

                    b.ToTable("MarcaProveedor");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Cotizacion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("MontoTotal")
                        .HasColumnType("float");

                    b.Property<int?>("VehiculoIncidenteTallerID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("VehiculoIncidenteTallerID");

                    b.ToTable("Cotizaciones");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Dueno", b =>
                {
                    b.Property<string>("CedulaRif")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CedulaRif");

                    b.ToTable("Duenos");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Factura", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrdenDeCompraID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("OrdenDeCompraID");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Incidente", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ubicacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Incidentes");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Marca", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Name");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.OrdenDeCompra", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CotizacionID")
                        .HasColumnType("int");

                    b.Property<int?>("ProveedorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("CotizacionID");

                    b.HasIndex("ProveedorID");

                    b.ToTable("Ordenes de Compra");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Pieza", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarcaName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("MarcaName");

                    b.ToTable("Piezas");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Poliza", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DuenoCedulaRif")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TipoPoliza")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("DuenoCedulaRif");

                    b.ToTable("Polizas");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.PrecioPieza", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CotizacionID")
                        .HasColumnType("int");

                    b.Property<int?>("PiezaID")
                        .HasColumnType("int");

                    b.Property<float>("Precio")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.HasIndex("CotizacionID");

                    b.HasIndex("PiezaID");

                    b.ToTable("Precio de la Pieza");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Proveedor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Taller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Talleres");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProveedorID")
                        .HasColumnType("int");

                    b.Property<int>("Rol")
                        .HasColumnType("int");

                    b.Property<int?>("TallerId")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProveedorID");

                    b.HasIndex("TallerId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Vehiculo", b =>
                {
                    b.Property<string>("Placa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DuenoCedulaRif")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IncidenteID")
                        .HasColumnType("int");

                    b.Property<string>("MarcaName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumeroDeEjes")
                        .HasColumnType("int");

                    b.Property<int>("NumeroDePuestos")
                        .HasColumnType("int");

                    b.Property<int>("Peso")
                        .HasColumnType("int");

                    b.Property<string>("SerialCarroceria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Placa");

                    b.HasIndex("DuenoCedulaRif");

                    b.HasIndex("IncidenteID");

                    b.HasIndex("MarcaName");

                    b.ToTable("Vehiculos");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.VehiculoIncidenteTaller", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaEntrega")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IncidenteID")
                        .HasColumnType("int");

                    b.Property<int?>("TallerId")
                        .HasColumnType("int");

                    b.Property<string>("VehiculoPlaca")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.HasIndex("IncidenteID");

                    b.HasIndex("TallerId");

                    b.HasIndex("VehiculoPlaca");

                    b.ToTable("Talleres asignados a Vehiculo del Incidente");
                });

            modelBuilder.Entity("MarcaProveedor", b =>
                {
                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Marca", null)
                        .WithMany()
                        .HasForeignKey("MarcasName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Proveedor", null)
                        .WithMany()
                        .HasForeignKey("ProovedoresID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Cotizacion", b =>
                {
                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.VehiculoIncidenteTaller", "VehiculoIncidenteTaller")
                        .WithMany()
                        .HasForeignKey("VehiculoIncidenteTallerID");

                    b.Navigation("VehiculoIncidenteTaller");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Factura", b =>
                {
                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.OrdenDeCompra", "OrdenDeCompra")
                        .WithMany()
                        .HasForeignKey("OrdenDeCompraID");

                    b.Navigation("OrdenDeCompra");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.OrdenDeCompra", b =>
                {
                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Cotizacion", "Cotizacion")
                        .WithMany()
                        .HasForeignKey("CotizacionID");

                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorID");

                    b.Navigation("Cotizacion");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Pieza", b =>
                {
                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaName");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Poliza", b =>
                {
                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Dueno", "Dueno")
                        .WithMany("Polizas")
                        .HasForeignKey("DuenoCedulaRif")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dueno");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.PrecioPieza", b =>
                {
                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Cotizacion", null)
                        .WithMany("PrecioPiezas")
                        .HasForeignKey("CotizacionID");

                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Pieza", "Pieza")
                        .WithMany()
                        .HasForeignKey("PiezaID");

                    b.Navigation("Pieza");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Usuario", b =>
                {
                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorID");

                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Taller", "Taller")
                        .WithMany()
                        .HasForeignKey("TallerId");

                    b.Navigation("Proveedor");

                    b.Navigation("Taller");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Vehiculo", b =>
                {
                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Dueno", "Dueno")
                        .WithMany()
                        .HasForeignKey("DuenoCedulaRif");

                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Incidente", null)
                        .WithMany("Implicados")
                        .HasForeignKey("IncidenteID");

                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Marca", "Marca")
                        .WithMany()
                        .HasForeignKey("MarcaName");

                    b.Navigation("Dueno");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.VehiculoIncidenteTaller", b =>
                {
                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Incidente", "Incidente")
                        .WithMany()
                        .HasForeignKey("IncidenteID");

                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Taller", "Taller")
                        .WithMany()
                        .HasForeignKey("TallerId");

                    b.HasOne("ProyectoDesarrollo.Persistence.Entidades.Vehiculo", "Vehiculo")
                        .WithMany()
                        .HasForeignKey("VehiculoPlaca");

                    b.Navigation("Incidente");

                    b.Navigation("Taller");

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Cotizacion", b =>
                {
                    b.Navigation("PrecioPiezas");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Dueno", b =>
                {
                    b.Navigation("Polizas");
                });

            modelBuilder.Entity("ProyectoDesarrollo.Persistence.Entidades.Incidente", b =>
                {
                    b.Navigation("Implicados");
                });
#pragma warning restore 612, 618
        }
    }
}
